name: Reusable Release
on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
        description: The name of the building docker image.
      description:
        type: string
        required: true
        description: The description of the building docker image.
      version:
        type: string
        required: true
        description: The version of the building docker image.
      push:
        type: string
        required: true
        description: The flag to enable/disable docker push. Specify false for build only.
    secrets:
      dockerhub-token:
        required: true
        description: Personal access token used to log against Docker Hub.

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  push:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      packages: write
    outputs:
      docker-hub-image: ${{ steps.image.outputs.docker-hub }}
      ghcr-image: ${{ steps.image.outputs.ghcr }}
      digest: ${{ steps.push.outputs.digest }}
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Setup QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@18ce135bb5112fa8ce4ed6c17ab05699d7f3a5e0 # v3.11.0

      - name: Generate image name
        id: image
        env:
          NAME: ${{ inputs.name }}
        run: |
          set -x
          echo "docker-hub=${GITHUB_REPOSITORY_OWNER}/${NAME}" >> "${GITHUB_OUTPUT}"
          echo "ghcr=ghcr.io/${GITHUB_REPOSITORY}/${NAME}" >> "${GITHUB_OUTPUT}"

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        env:
          BASE_URL: ${{ github.server_url }}/${{ github.repository }}
        with:
          images: |
            ${{ steps.image.outputs.docker-hub }}
            ${{ steps.image.outputs.ghcr }}
          tags: |
            type=semver,pattern={{version}},value=v${{ inputs.version }}
          labels: |
            org.opencontainers.image.title=${{ inputs.name }}
            org.opencontainers.image.description=${{ inputs.description }}
            org.opencontainers.image.url=${{ env.BASE_URL }}/tree/main/${{ inputs.name }}
            org.opencontainers.image.source=${{ env.BASE_URL }}/blob/main/${{ inputs.name }}/Dockerfile
            org.opencontainers.image.documentation=${{ env.BASE_URL }}/blob/main/${{ inputs.name }}/README.md
            org.opencontainers.image.authors=[${{ github.repository_owner }}](${{ github.server_url }}/${{ github.repository_owner }})

      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        if: ${{ inputs.push == 'true' }}
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.dockerhub-token }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        if: ${{ inputs.push == 'true' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Build and Push
        id: push
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          context: ${{ inputs.name }}/
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  sign:
    if: ${{ inputs.push == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [push]
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Install Cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2

      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.dockerhub-token }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Sign
        env:
          DOCKER_HUB_IMAGE: ${{ needs.push.outputs.docker-hub-image }}
          GHCR_IMAGE: ${{ needs.push.outputs.ghcr-image }}
          IMAGE_DIGEST: ${{ needs.push.outputs.digest }}
        run: |
          set -x
          cosign sign \
            --oidc-issuer=https://token.actions.githubusercontent.com \
            --oidc-provider=github-actions \
            --yes \
            "${DOCKER_HUB_IMAGE}@${IMAGE_DIGEST}"

          cosign sign \
            --oidc-issuer=https://token.actions.githubusercontent.com \
            --oidc-provider=github-actions \
            --yes \
            "${GHCR_IMAGE}@${IMAGE_DIGEST}"

      - name: Attest for Docker Hub
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        with:
          subject-name: index.docker.io/${{ needs.push.outputs.docker-hub-image }}
          subject-digest: ${{ needs.push.outputs.digest }}
          push-to-registry: true

      - name: Attest for GitHub Container Registry
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        with:
          subject-name: ${{ needs.push.outputs.ghcr-image }}
          subject-digest: ${{ needs.push.outputs.digest }}
          push-to-registry: true

      - name: Retrieve OIDC Token
        id: oidc
        uses: tmknom/retrieve-oidc-token-action@4c373152cedf7f42b1e496e245236449d8d57121 # v0.2.1

      - name: Verify
        env:
          DOCKER_HUB_IMAGE: ${{ needs.push.outputs.docker-hub-image }}
          GHCR_IMAGE: ${{ needs.push.outputs.ghcr-image }}
          IMAGE_DIGEST: ${{ needs.push.outputs.digest }}
          JOB_WORKFLOW_REF: ${{ steps.oidc.outputs.job_workflow_ref }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -x
          cosign verify \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
            --certificate-identity "${GITHUB_SERVER_URL}/${JOB_WORKFLOW_REF}" \
            --certificate-github-workflow-repository "${GITHUB_REPOSITORY}" \
            --certificate-github-workflow-sha "${GITHUB_SHA}" \
            "${DOCKER_HUB_IMAGE}@${IMAGE_DIGEST}"

          cosign verify \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
            --certificate-identity "${GITHUB_SERVER_URL}/${JOB_WORKFLOW_REF}" \
            --certificate-github-workflow-repository "${GITHUB_REPOSITORY}" \
            --certificate-github-workflow-sha "${GITHUB_SHA}" \
            "${GHCR_IMAGE}@${IMAGE_DIGEST}"

          gh attestation verify "oci://${DOCKER_HUB_IMAGE}@${IMAGE_DIGEST}" \
            --deny-self-hosted-runners \
            --repo "${GITHUB_REPOSITORY}" \
            --cert-oidc-issuer "https://token.actions.githubusercontent.com" \
            --cert-identity "${GITHUB_SERVER_URL}/${JOB_WORKFLOW_REF}"

          gh attestation verify "oci://${GHCR_IMAGE}@${IMAGE_DIGEST}" \
            --deny-self-hosted-runners \
            --repo "${GITHUB_REPOSITORY}" \
            --cert-oidc-issuer "https://token.actions.githubusercontent.com" \
            --cert-identity "${GITHUB_SERVER_URL}/${JOB_WORKFLOW_REF}"

  docs:
    if: ${{ inputs.push == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [push, sign]
    permissions:
      contents: write
      packages: read
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1
        with:
          ref: ${{ github.event.repository.default_branch }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Retrieve OIDC Token
        id: oidc
        uses: tmknom/retrieve-oidc-token-action@4c373152cedf7f42b1e496e245236449d8d57121 # v0.2.1

      - name: Cosign log verification
        id: cosign
        env:
          GHCR_IMAGE: ${{ needs.push.outputs.ghcr-image }}
          IMAGE_DIGEST: ${{ needs.push.outputs.digest }}
          JOB_WORKFLOW_REF: ${{ steps.oidc.outputs.job_workflow_ref }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -x
          cosign_path="${RUNNER_TEMP}/cosign.log"
          cosign_trimmed_path="${RUNNER_TEMP}/cosign-trimmed.log"
          echo "path=${cosign_trimmed_path}" >> "${GITHUB_OUTPUT}"

          cosign verify \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
            --certificate-identity "${GITHUB_SERVER_URL}/${JOB_WORKFLOW_REF}" \
            --certificate-github-workflow-repository "${GITHUB_REPOSITORY}" \
            --certificate-github-workflow-sha "${GITHUB_SHA}" \
            "${GHCR_IMAGE}@${IMAGE_DIGEST}" > "${cosign_path}" 2>&1

          head -7 "${cosign_path}" > "${cosign_trimmed_path}"
          json_line="$(grep '^\[{' "${cosign_path}" | cut -c 1-100)"
          echo "${json_line}..." >> "${cosign_trimmed_path}"

      - name: GitHub Artifact Attestations log verification
        id: attestation
        env:
          GH_FORCE_TTY: 1 # https://github.com/cli/cli/issues/10047
          GHCR_IMAGE: ${{ needs.push.outputs.ghcr-image }}
          IMAGE_DIGEST: ${{ needs.push.outputs.digest }}
          JOB_WORKFLOW_REF: ${{ steps.oidc.outputs.job_workflow_ref }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -x
          gh_attestation_path="${RUNNER_TEMP}/gh-attestation.log"
          gh_attestation_trimmed_path="${RUNNER_TEMP}/gh-attestation-trimmed.log"
          echo "path=${gh_attestation_trimmed_path}" >> "${GITHUB_OUTPUT}"

          gh attestation verify "oci://${GHCR_IMAGE}@${IMAGE_DIGEST}" \
            --deny-self-hosted-runners \
            --repo "${GITHUB_REPOSITORY}" \
            --cert-oidc-issuer "https://token.actions.githubusercontent.com" \
            --cert-identity "${GITHUB_SERVER_URL}/${JOB_WORKFLOW_REF}" > "${gh_attestation_path}" 2>&1

          head -2 "${gh_attestation_path}" > "${gh_attestation_trimmed_path}"
          echo "✓ Verification succeeded!" >> "${gh_attestation_trimmed_path}"
          echo "..." >> "${gh_attestation_trimmed_path}"

      - name: Generate docs
        id: docs
        env:
          NAME: ${{ inputs.name }}
          VERSION: ${{ inputs.version }}
          DOCKER_HUB_IMAGE: ${{ needs.push.outputs.docker-hub-image }}
          GHCR_IMAGE: ${{ needs.push.outputs.ghcr-image }}
          IMAGE_DIGEST: ${{ needs.push.outputs.digest }}
          CERTIFICATE_IDENTITY: ${{ github.server_url }}/${{ steps.oidc.outputs.job_workflow_ref }}
          CERTIFICATE_OIDC_ISSUER: https://token.actions.githubusercontent.com
          COSIGN_LOG_PATH: ${{ steps.cosign.outputs.path }}
          GH_ATTESTATION_LOG_PATH: ${{ steps.attestation.outputs.path }}
        run: |
          set -x
          filepath="${NAME}/installation.md"
          echo "path=${filepath}" >> "${GITHUB_OUTPUT}"

          COSIGN_VERIFY_SUCCEEDED="$(cat "${COSIGN_LOG_PATH}")"
          GH_ATTESTATION_SUCCEEDED="$(cat "${GH_ATTESTATION_LOG_PATH}")"
          export COSIGN_VERIFY_SUCCEEDED
          export GH_ATTESTATION_SUCCEEDED
          envsubst < ".github/template.md" > "${filepath}"
          cat "${filepath}" >> "${GITHUB_STEP_SUMMARY}"

      - name: Git Push
        id: push
        uses: tmknom/git-push-action@419dadebef56a31a87e80ce1d6388fb13521cf98 # v0.5.1
        with:
          message: 'docs: update installation document for ${{ inputs.name }}'
          paths: ${{ steps.docs.outputs.path }}

      - name: Create Pull Request
        if: ${{ steps.push.outputs.pushed == 'true' }}
        uses: tmknom/create-pull-request-action@7568b72a4ec0bea56d0df3415bc838531f9d8909 # v0.1.0
        with:
          head-branch: ${{ steps.push.outputs.branch }}
          title: ${{ steps.push.outputs.subject }}
          body: ${{ steps.push.outputs.body }}

      - name: Merge PR
        if: ${{ steps.push.outputs.pushed == 'true' }}
        uses: tmknom/merge-pull-request-action@fc1f26011c2b31409c37a4ac9792d68bdc29321c # v0.4.0
        with:
          pull-request: ${{ steps.push.outputs.branch }}
