name: Git Diff
description: Describe files with only git diff.

inputs:
  pattern:
    default: ""
    required: false
    description: "A pattern used filtering files. Same as `-E pattern` of `grep` command."
  type:
    default: ""
    required: false
    description: "Predefined file types: [yaml|markdown|shell|docker|action]"
  base-branch:
    default: "main"
    required: false
    description: "Branch to be compared with the currently checkout code."
  fetch-depth:
    default: "100"
    required: false
    description: "Number of commits to fetch. 0 indicates all history for all branches and tags."

outputs:
  files:
    description: "List of files for git diff."
    value: ${{ steps.aggregate.outputs.files }}

runs:
  using: composite

  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ inputs.fetch-depth }}

    - name: Fetch base branch
      shell: bash
      env:
        BASE_BRANCH: ${{ inputs.base-branch }}
      run: |
        git fetch --no-tags --no-recurse-submodules --depth=1 origin "${BASE_BRANCH}"

    - name: Diff files
      shell: bash
      id: diff
      env:
        BASE_BRANCH: ${{ inputs.base-branch }}
      run: |
        files="$(git diff origin/"${BASE_BRANCH}" --name-only | tr '\n' ' ' | sed 's/ *$//')"
        echo "::set-output name=files::${files}"

    - name: Find files
      shell: bash
      id: find
      if: ${{ inputs.pattern != '' }}
      env:
        PATTERN: ${{ inputs.pattern }}
        DIFF_FILES: ${{ steps.diff.outputs.files }}
      run: |
        filtered="$(printenv DIFF_FILES | tr ' ' '\n' | grep -E "${PATTERN}" || true)"
        files="$(echo "${filtered}" | tr '\n' ' ' | sed 's/ *$//')"
        echo "::set-output name=files::${files}"

    - name: Convert pattern from type
      shell: bash
      id: convert
      if: ${{ inputs.type != '' }}
      env:
        TYPE: ${{ inputs.type }}
      run: |
        declare pattern=''
        case "${TYPE}" in
          "yaml") pattern='.y*ml$' ;;
          "markdown") pattern='.md$' ;;
          "shell") pattern='.sh$' ;;
          "docker") pattern='Dockerfile$' ;;
          "action") pattern='^.github/workflows/.*.y*ml$' ;;
          *) pattern='' ;;
        esac
        echo "::set-output name=pattern::${pattern}"

    - name: Specify files
      shell: bash
      id: specify
      if: ${{ steps.convert.outputs.pattern != '' }}
      env:
        PATTERN: ${{ steps.convert.outputs.pattern }}
        DIFF_FILES: ${{ steps.diff.outputs.files }}
      run: |
        filtered="$(printenv DIFF_FILES | tr ' ' '\n' | grep -E "${PATTERN}" || true)"
        files="$(echo "${filtered}" | tr '\n' ' ' | sed 's/ *$//')"
        echo "::set-output name=files::${files}"

    - name: Aggregate outputs
      shell: bash
      id: aggregate
      env:
        PATTERN: ${{ inputs.pattern }}
        TYPE: ${{ inputs.type }}
        DIFF_FILES: ${{ steps.diff.outputs.files }}
        FIND_FILES: ${{ steps.find.outputs.files }}
        SPECIFY_FILES: ${{ steps.specify.outputs.files }}
      run: |
        if [[ "${PATTERN}" != "" ]]; then
          echo "::set-output name=files::${FIND_FILES}"
          exit 0
        fi

        if [[ "${TYPE}" != "" ]]; then
          echo "::set-output name=files::${SPECIFY_FILES}"
          exit 0
        fi

        echo "::set-output name=files::${DIFF_FILES}"

    - name: Print result
      shell: bash
      env:
        FILES: ${{ steps.aggregate.outputs.files }}
      run: |
        echo "result: '${FILES}'"

# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#branding
branding:
  icon: "package"
  color: "gray-dark"
