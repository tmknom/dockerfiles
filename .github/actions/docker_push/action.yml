name: Push Docker
description: Extract metadata, log in, build, and push Docker image.

inputs:
  image-name:
    required: true
    description: "The name of building docker image."
  image-description:
    required: true
    description: "The description of building docker image."
  images:
    required: true
    description: "List of Docker images to use as base name for tags."
  metadata-tags:
    required: true
    description: "List of tags as key-value pair attributes."
  registry:
    required: false
    description: "Server address of Docker registry. If not set then will default to Docker Hub."
  username:
    required: true
    description: "Username used to log against the Docker registry."
  password:
    required: true
    description: "Password or personal access token used to log against the Docker registry."
  context:
    default: "."
    required: false
    description: "Build's context is the set of files located in the specified PATH or URL."
  push:
    required: true
    description: "The flag to enable/disable docker push. Specify false for build only."

runs:
  using: composite

  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ inputs.images }}
        tags: ${{ inputs.metadata-tags }}
        labels: |
          org.opencontainers.image.title=${{ inputs.image-name }}
          org.opencontainers.image.description=${{ inputs.image-description }}

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.context }}
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#branding
branding:
  icon: "package"
  color: "gray-dark"
